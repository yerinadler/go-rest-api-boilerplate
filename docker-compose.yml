version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    restart: unless-stopped
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    restart: unless-stopped
    ports:
      - 9092:9092
    expose:
      - 29092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://127.0.0.1:9092
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
    depends_on:
      - zookeeper
  kafka-initialiser:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - kafka
    entrypoint: [ "/bin/sh", "-c" ]
    command: |
      "
        kafka-topics --list --bootstrap-server kafka:29092

        sleep 5

        kafka-topics --create --topic product --if-not-exists --replication-factor 1 --partitions 1 --bootstrap-server kafka:29092
      "
      
  mysql:
    image: mysql:8
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
  grafana:
    image: grafana/grafana:10.1.1
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./infrastructure-config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_FEATURE_TOGGLES_ENABLE: traceqlEditor
  prometheus:
    image: prom/prometheus:v2.50.0
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./infrastructure-config/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--web.enable-remote-write-receiver"
      - "--enable-feature=exemplar-storage"
      - "--enable-feature=native-histograms"
  otel-collector:
    image: otel/opentelemetry-collector:latest
    restart: unless-stopped
    ports:
      - 4317:4317
      - 4318:4318
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./infrastructure-config/otel-collector.yaml:/etc/otel-collector.yaml
  tempo:
    image: grafana/tempo:2.3.1
    restart: unless-stopped
    ports:
      - 3200:3200
      - 14268
      - 4317
      - 4318
    volumes:
      - ./infrastructure-config/tempo.yaml:/etc/tempo.yaml
      - ./data/tempo-data:/tmp/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
  loki:
    image: grafana/loki:2.9.4
    restart: unless-stopped
    volumes:
      - ./infrastructure-config/loki.yaml:/etc/loki/local-config.yaml
    ports:
      - 3100:3100
    command: [ "--config.file=/etc/loki/local-config.yaml" ]
  fluentbit:
    image: grafana/fluent-bit-plugin-loki:main
    restart: unless-stopped
    volumes:
      - ./infrastructure-config/fluent.conf:/fluent-bit/etc/fluent-bit.conf:ro
    environment:
      LOKI_URL: http://loki:3100/loki/api/v1/push
    ports:
      - "24224:24224"
      - "24224:24224/udp"

volumes:
  mysql:


networks:
  default:
    name: go-rest-api
